Routing  //use a direct exchange
         //message go with binding key === the routing key

 Receiving messages selectively        
-----------------------------
//declare dependency
                var amqp = require('amqplib/callback_api');
//create connect
                amqp.connect('amqp://localhost', function(error0, connection) {
                        if (error0) {
                                throw error0;
                        }
//create channel                
                connection.createChannel(function(error1, channel) {
                        if (error1) {
                                throw error1;
                        }
                var exchange = 'direct_logs';
                var args = process.argv.slice(2);
                var msg = args.slice(1).join(' ') || 'Hello World!';
                var severity = (args.length > 0) ? args[0] : 'info';

//assert exchange = direct
                channel.assertExchange(exchange, 'direct', {
                        durable: false
                });
//publich bind serverity                
                channel.publish(exchange, severity, Buffer.from(msg));
                        console.log(" [x] Sent %s: '%s'", severity, msg);
                });

                setTimeout(function() { 
                connection.close(); 
                process.exit(0) 
                }, 500);
                });

------------------------------------
receive_logs_direct.js

//declare dependency
                var amqp = require('amqplib/callback_api');

                var args = process.argv.slice(2);

                if (args.length == 0) {
                        console.log("Usage: receive_logs_direct.js [info] [warning] [error]");
                        process.exit(1);
                }
//create connection
                amqp.connect('amqp://localhost', function(error0, connection) {
                        if (error0) {
                                throw error0;
                        }
//creaet channel           
                connection.createChannel(function(error1, channel) {
                        if (error1) {
                                throw error1;
                        }

                var exchange = 'direct_logs';
//asset exchange direct
                channel.assertExchange(exchange, 'direct', {
                        durable: false
                });
//assert queue
                channel.assertQueue('', {
                        exclusive: true
                }, function(error2, q) {
                        if (error2) {
                        throw error2;
                        }
                console.log(' [*] Waiting for logs. To exit press CTRL+C');
//bind queue with severity
                args.forEach(function(severity) {
                        channel.bindQueue(q.queue, exchange, severity);
                });

                channel.consume(q.queue, function(msg) {
                        console.log(" [x] %s: '%s'", msg.fields.routingKey, msg.content.toString());
                }, {
                        noAck: true
                });
                });
                });
                });

----------------------------------------
run script

./receive_logs_direct.js info warning error
                         ==================

./emit_log_direct.js error "Run. Run. Or it will explode."
# => [x] Sent 'error':'Run. Run. Or it will explode.'